
public class MandlebrotUI extends javax.swing.JFrame {

    /**
     * Creates new form MandlebrotUI
     */
    public MandlebrotUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xBoundsPanel = new javax.swing.JPanel();
        xMinLabel = new javax.swing.JLabel();
        xMaxLabel = new javax.swing.JLabel();
        xMinField = new javax.swing.JTextField();
        xMaxField = new javax.swing.JTextField();
        yBoundsPanel = new javax.swing.JPanel();
        yMinLabel = new javax.swing.JLabel();
        yMaxLabel = new javax.swing.JLabel();
        yMinField = new javax.swing.JTextField();
        yMaxField = new javax.swing.JTextField();
        displayPanel = new MandelPanel();
        zoomPanel = new javax.swing.JPanel();
        zoomOutButton = new javax.swing.JButton();
        zoomInButton = new javax.swing.JButton();
        navigationPanel = new javax.swing.JPanel();
        upButton = new javax.swing.JButton();
        leftButton = new javax.swing.JButton();
        rightButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        iterationsPanel = new javax.swing.JPanel();
        itersField = new javax.swing.JTextField();
        iterationsLabel = new javax.swing.JLabel();
        threadsField = new javax.swing.JTextField();
        antiAliasingComboBox = new javax.swing.JComboBox();
        threadsLabel = new javax.swing.JLabel();
        antiAliasingLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        xBoundsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("X"));

        xMinLabel.setText("Min:");

        xMaxLabel.setText("Max:");

        xMinField.setText(String.valueOf(((MandelPanel) displayPanel).xMin));
        xMinField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xMinFieldActionPerformed(evt);
            }
        });
        xMinField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                xMinFieldFocusLost(evt);
            }
        });

        xMaxField.setText(String.valueOf(((MandelPanel) displayPanel).xMax));
        xMaxField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xMaxFieldActionPerformed(evt);
            }
        });
        xMaxField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                xMaxFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout xBoundsPanelLayout = new javax.swing.GroupLayout(xBoundsPanel);
        xBoundsPanel.setLayout(xBoundsPanelLayout);
        xBoundsPanelLayout.setHorizontalGroup(
            xBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xBoundsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(xBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(xMaxLabel)
                    .addComponent(xMinLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xMinField)
                    .addComponent(xMaxField))
                .addContainerGap())
        );
        xBoundsPanelLayout.setVerticalGroup(
            xBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xBoundsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(xBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xMinLabel)
                    .addComponent(xMinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(xBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xMaxLabel)
                    .addComponent(xMaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        yBoundsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Y"));

        yMinLabel.setText("Min:");

        yMaxLabel.setText("Max:");

        yMinField.setText(String.valueOf(((MandelPanel)  displayPanel).yMin));
        yMinField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yMinFieldActionPerformed(evt);
            }
        });
        yMinField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                yMinFieldFocusLost(evt);
            }
        });

        yMaxField.setText(String.valueOf(((MandelPanel) displayPanel).yMax));
        yMaxField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yMaxFieldActionPerformed(evt);
            }
        });
        yMaxField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                yMaxFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout yBoundsPanelLayout = new javax.swing.GroupLayout(yBoundsPanel);
        yBoundsPanel.setLayout(yBoundsPanelLayout);
        yBoundsPanelLayout.setHorizontalGroup(
            yBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yBoundsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(yBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(yMaxLabel)
                    .addComponent(yMinLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(yBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yMinField)
                    .addComponent(yMaxField))
                .addContainerGap())
        );
        yBoundsPanelLayout.setVerticalGroup(
            yBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yBoundsPanelLayout.createSequentialGroup()
                .addGroup(yBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yMinLabel)
                    .addComponent(yMinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(yBoundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yMaxLabel)
                    .addComponent(yMaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        zoomPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Zoom"));

        zoomOutButton.setText("Zoom Out");
        zoomOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomOutButtonActionPerformed(evt);
            }
        });

        zoomInButton.setText("Zoom In");
        zoomInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomInButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout zoomPanelLayout = new javax.swing.GroupLayout(zoomPanel);
        zoomPanel.setLayout(zoomPanelLayout);
        zoomPanelLayout.setHorizontalGroup(
            zoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(zoomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(zoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(zoomInButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(zoomOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        zoomPanelLayout.setVerticalGroup(
            zoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(zoomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(zoomInButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zoomOutButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        navigationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Navigation"));

        upButton.setText("Up");
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });

        leftButton.setText("Left");
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });

        rightButton.setText("Right");
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });

        downButton.setText("Down");
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navigationPanelLayout = new javax.swing.GroupLayout(navigationPanel);
        navigationPanel.setLayout(navigationPanelLayout);
        navigationPanelLayout.setHorizontalGroup(
            navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(upButton)
                    .addComponent(downButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        navigationPanelLayout.setVerticalGroup(
            navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leftButton)
                    .addComponent(rightButton)))
            .addGroup(navigationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(upButton)
                .addGap(35, 35, 35)
                .addComponent(downButton))
        );

        iterationsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        itersField.setText(String.valueOf(((MandelPanel) displayPanel).MAX_ITERS));
        itersField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itersFieldActionPerformed(evt);
            }
        });
        itersField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                itersFieldFocusLost(evt);
            }
        });

        iterationsLabel.setText("Iterations:");

        threadsField.setText(Integer.toString(((MandelPanel) displayPanel).numThreads));
        threadsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threadsFieldActionPerformed(evt);
            }
        });
        threadsField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                threadsFieldFocusLost(evt);
            }
        });

        antiAliasingComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Off", "On" }));
        antiAliasingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antiAliasingComboBoxActionPerformed(evt);
            }
        });

        threadsLabel.setText("Threads:");

        antiAliasingLable.setText("Anti-aliasing:");

        javax.swing.GroupLayout iterationsPanelLayout = new javax.swing.GroupLayout(iterationsPanel);
        iterationsPanel.setLayout(iterationsPanelLayout);
        iterationsPanelLayout.setHorizontalGroup(
            iterationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iterationsPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(iterationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(iterationsLabel)
                    .addComponent(threadsLabel)
                    .addComponent(antiAliasingLable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(iterationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(antiAliasingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threadsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itersField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        iterationsPanelLayout.setVerticalGroup(
            iterationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iterationsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(iterationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itersField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iterationsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(iterationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(threadsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threadsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(iterationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(antiAliasingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(antiAliasingLable))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xBoundsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(yBoundsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(zoomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(navigationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(iterationsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(displayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(xBoundsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(yBoundsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zoomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(navigationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iterationsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void xMinFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xMinFieldActionPerformed
        ((MandelPanel) displayPanel).xMin = Double.parseDouble(xMinField.getText());
        displayPanel.repaint();
    }//GEN-LAST:event_xMinFieldActionPerformed

    private void yMinFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yMinFieldActionPerformed
        ((MandelPanel) displayPanel).yMin = Double.parseDouble(yMinField.getText());
        displayPanel.repaint();
    }//GEN-LAST:event_yMinFieldActionPerformed

    private void xMaxFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xMaxFieldActionPerformed
        ((MandelPanel) displayPanel).xMax = Double.parseDouble(xMaxField.getText());
        displayPanel.repaint();
    }//GEN-LAST:event_xMaxFieldActionPerformed

    private void yMaxFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yMaxFieldActionPerformed
        ((MandelPanel) displayPanel).yMax = Double.parseDouble(yMaxField.getText());
        displayPanel.repaint();
    }//GEN-LAST:event_yMaxFieldActionPerformed

    private void xMinFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_xMinFieldFocusLost
        xMinFieldActionPerformed(null);
    }//GEN-LAST:event_xMinFieldFocusLost

    private void yMinFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yMinFieldFocusLost
        yMinFieldActionPerformed(null);
    }//GEN-LAST:event_yMinFieldFocusLost

    private void xMaxFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_xMaxFieldFocusLost
        xMaxFieldActionPerformed(null);
    }//GEN-LAST:event_xMaxFieldFocusLost

    private void yMaxFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yMaxFieldFocusLost
        yMaxFieldActionPerformed(null);
    }//GEN-LAST:event_yMaxFieldFocusLost

    private void zoomInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomInButtonActionPerformed
        double xMin = ((MandelPanel) displayPanel).xMin;
        double xMax = ((MandelPanel) displayPanel).xMax;
        double yMin = ((MandelPanel) displayPanel).yMin;
        double yMax = ((MandelPanel) displayPanel).yMax;
        ((MandelPanel) displayPanel).xMin += (xMax - xMin) / 4;
        ((MandelPanel) displayPanel).xMax -= (xMax - xMin) / 4;
        ((MandelPanel) displayPanel).yMin += (yMax - yMin) / 4;
        ((MandelPanel) displayPanel).yMax -= (yMax - yMin) / 4;
        updateTextFields();
        displayPanel.repaint();
    }//GEN-LAST:event_zoomInButtonActionPerformed

    private void zoomOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomOutButtonActionPerformed
        double xMin = ((MandelPanel) displayPanel).xMin;
        double xMax = ((MandelPanel) displayPanel).xMax;
        double yMin = ((MandelPanel) displayPanel).yMin;
        double yMax = ((MandelPanel) displayPanel).yMax;
        ((MandelPanel) displayPanel).xMin -= (xMax - xMin) / 4;
        ((MandelPanel) displayPanel).xMax += (xMax - xMin) / 4;
        ((MandelPanel) displayPanel).yMin -= (yMax - yMin) / 4;
        ((MandelPanel) displayPanel).yMax += (yMax - yMin) / 4;
        updateTextFields();
        displayPanel.repaint();
    }//GEN-LAST:event_zoomOutButtonActionPerformed

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        double yMin = ((MandelPanel) displayPanel).yMin;
        double yMax = ((MandelPanel) displayPanel).yMax;
        double shiftAmt = (yMax - yMin) / 6;
        ((MandelPanel) displayPanel).yMin -= shiftAmt;
        ((MandelPanel) displayPanel).yMax -= shiftAmt;
        updateTextFields();
        displayPanel.repaint();
    }//GEN-LAST:event_upButtonActionPerformed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
        double xMin = ((MandelPanel) displayPanel).xMin;
        double xMax = ((MandelPanel) displayPanel).xMax;
        double shiftAmt = (xMax - xMin) / 6;
        ((MandelPanel) displayPanel).xMin += shiftAmt;
        ((MandelPanel) displayPanel).xMax += shiftAmt;
        updateTextFields();
        displayPanel.repaint();
    }//GEN-LAST:event_rightButtonActionPerformed

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
        double xMin = ((MandelPanel) displayPanel).xMin;
        double xMax = ((MandelPanel) displayPanel).xMax;
        double shiftAmt = (xMax - xMin) / 6;
        ((MandelPanel) displayPanel).xMin -= shiftAmt;
        ((MandelPanel) displayPanel).xMax -= shiftAmt;
        updateTextFields();
        displayPanel.repaint();
    }//GEN-LAST:event_leftButtonActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        double yMin = ((MandelPanel) displayPanel).yMin;
        double yMax = ((MandelPanel) displayPanel).yMax;
        double shiftAmt = (yMax - yMin) / 6;
        ((MandelPanel) displayPanel).yMin += shiftAmt;
        ((MandelPanel) displayPanel).yMax += shiftAmt;
        updateTextFields();
        displayPanel.repaint();
    }//GEN-LAST:event_downButtonActionPerformed

    private void itersFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itersFieldActionPerformed
        ((MandelPanel) displayPanel).MAX_ITERS = Integer.parseInt(itersField.getText());
        displayPanel.repaint();
    }//GEN-LAST:event_itersFieldActionPerformed

    private void itersFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itersFieldFocusLost
        ((MandelPanel) displayPanel).MAX_ITERS = Integer.parseInt(itersField.getText());
        displayPanel.repaint();
    }//GEN-LAST:event_itersFieldFocusLost

    private void threadsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threadsFieldActionPerformed
        ((MandelPanel) displayPanel).numThreads = Integer.parseInt(threadsField.getText());
        displayPanel.repaint();
    }//GEN-LAST:event_threadsFieldActionPerformed

    private void threadsFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_threadsFieldFocusLost
        ((MandelPanel) displayPanel).numThreads = Integer.parseInt(threadsField.getText());
        displayPanel.repaint();
    }//GEN-LAST:event_threadsFieldFocusLost

    private void antiAliasingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antiAliasingComboBoxActionPerformed
        if ("On".equals((String) antiAliasingComboBox.getSelectedItem())) {
            ((MandelPanel) displayPanel).antiAliasing = true;
        } else {
            ((MandelPanel) displayPanel).antiAliasing = false;
        }
        displayPanel.repaint();
    }//GEN-LAST:event_antiAliasingComboBoxActionPerformed

    private void updateTextFields() {
        xMinField.setText(String.valueOf(((MandelPanel) displayPanel).xMin));
        xMaxField.setText(String.valueOf(((MandelPanel) displayPanel).xMax));
        yMinField.setText(String.valueOf(((MandelPanel) displayPanel).yMin));
        yMaxField.setText(String.valueOf(((MandelPanel) displayPanel).yMax));
        itersField.setText(String.valueOf(((MandelPanel) displayPanel).MAX_ITERS));
        threadsField.setText(String.valueOf(((MandelPanel) displayPanel).numThreads));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MandlebrotUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MandlebrotUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MandlebrotUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MandlebrotUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MandlebrotUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox antiAliasingComboBox;
    private javax.swing.JLabel antiAliasingLable;
    private javax.swing.JPanel displayPanel;
    private javax.swing.JButton downButton;
    private javax.swing.JLabel iterationsLabel;
    private javax.swing.JPanel iterationsPanel;
    private javax.swing.JTextField itersField;
    private javax.swing.JButton leftButton;
    private javax.swing.JPanel navigationPanel;
    private javax.swing.JButton rightButton;
    private javax.swing.JTextField threadsField;
    private javax.swing.JLabel threadsLabel;
    private javax.swing.JButton upButton;
    private javax.swing.JPanel xBoundsPanel;
    private javax.swing.JTextField xMaxField;
    private javax.swing.JLabel xMaxLabel;
    private javax.swing.JTextField xMinField;
    private javax.swing.JLabel xMinLabel;
    private javax.swing.JPanel yBoundsPanel;
    private javax.swing.JTextField yMaxField;
    private javax.swing.JLabel yMaxLabel;
    private javax.swing.JTextField yMinField;
    private javax.swing.JLabel yMinLabel;
    private javax.swing.JButton zoomInButton;
    private javax.swing.JButton zoomOutButton;
    private javax.swing.JPanel zoomPanel;
    // End of variables declaration//GEN-END:variables
}
